// ================== PARAMETERS ==================

// Study area: Bangladesh districts (ADM2 level)
var districts = ee.FeatureCollection('FAO/GAUL/2015/level2')
                  .filter(ee.Filter.eq('ADM0_NAME', 'Bangladesh'));

Map.centerObject(districts, 6);

// Time frame
var startDate = '2021-03-01';
var endDate   = '2025-08-31';
var months    = [3,4,5,6,7,8]; // Pre-monsoon & monsoon

// Dangerous Heat Index threshold (°C)
var hiThreshold = 40;


// ================== DATA ==================

var dailyData = ee.ImageCollection("ECMWF/ERA5_LAND/DAILY_AGGR")
    .filterDate(startDate, endDate)
    .filter(ee.Filter.inList('month', months))
    .filterBounds(districts)
    .select(['temperature_2m_max','temperature_2m','dewpoint_temperature_2m']);


// ================== FUNCTIONS ==================

// Function to compute Heat Index
var calculateHI = function(image) {
  var tMax = image.select('temperature_2m_max');
  var tMean = image.select('temperature_2m');
  var dMean = image.select('dewpoint_temperature_2m');

  // Kelvin → Celsius
  var T_c = tMax.subtract(273.15);
  var T_f = T_c.multiply(9/5).add(32);
  var Td_c = dMean.subtract(273.15);

  // Relative Humidity (Magnus)
  var e = ee.Image(6.11).multiply(
            Td_c.expression('10**((7.5*Td)/(237.3+Td))', {'Td': Td_c}));
  var es = ee.Image(6.11).multiply(
            T_c.expression('10**((7.5*T)/(237.3+T))', {'T': T_c}));
  var RH = e.divide(es).multiply(100);

  // Rothfusz regression
  var HI_f = ee.Image(-42.379)
    .add(T_f.multiply(2.04901523))
    .add(RH.multiply(10.14333127))
    .subtract(T_f.multiply(RH).multiply(0.22475541))
    .subtract(T_f.pow(2).multiply(0.00683783))
    .subtract(RH.pow(2).multiply(0.05481717))
    .add(T_f.pow(2).multiply(RH).multiply(0.00122874))
    .add(T_f.multiply(RH.pow(2)).multiply(0.00085282))
    .subtract(T_f.pow(2).multiply(RH.pow(2)).multiply(0.00000199));

  // Convert back to °C
  var HI_c = HI_f.subtract(32).multiply(5/9).rename('heat_index');

  return image.addBands(HI_c);
};

// Apply HI function
var dailyHI = dailyData.map(calculateHI);

// Mask dangerous days
var dangerousDays = dailyHI.map(function(img) {
  return img.select('heat_index').gt(hiThreshold).rename('HI_gt40');
});

// Count of dangerous days
var totalDangerDays = dangerousDays.sum().rename('count_HI_gt40');

// Mean maps (all years combined)
var meanT = dailyHI.select('temperature_2m').mean().subtract(273.15).rename('mean_temp');
var maxT  = dailyHI.select('temperature_2m_max').mean().subtract(273.15).rename('max_temp');
var meanHI= dailyHI.select('heat_index').mean().rename('mean_HI');


// ================== YEARLY AVG HEAT INDEX ==================

var yearlyHI = ee.List([]);
var years = ee.List.sequence(2021, 2025);

years.evaluate(function(yrList) {
  yrList.forEach(function(y) {
    var yearData = dailyHI.filter(ee.Filter.calendarRange(y, y, 'year'));
    var meanHIyr = yearData.select('heat_index').mean().rename('HI_' + y);
    yearlyHI.add(meanHIyr);

    // ---- Export yearly maps ----
    Export.image.toDrive({
      image: meanHIyr,
      description: 'Bangladesh_HI_' + y,
      fileNamePrefix: 'mean_HI_' + y,
      scale: 10000,
      region: districts.geometry(),
      fileFormat: 'GeoTIFF',
      maxPixels: 1e13
    });
  });
});


// ================== ZONAL STATS ==================

// Add yearly HI bands safely
var yearlyBands = years.map(function(y){
  y = ee.Number(y).int();
  var meanHIyr = dailyHI.filter(ee.Filter.calendarRange(y, y, 'year'))
                        .select('heat_index')
                        .mean()
                        .rename(ee.String('HI_').cat(y.format()));
  return meanHIyr;
});

// Stack them into one multiband image
var yearlyStack = ee.ImageCollection(yearlyBands).toBands();

// Fix band names (toBands auto-names as "0", "1", …)
// Fix band names (ensure integer string like "2021", not "2021.0")
yearlyStack = yearlyStack.rename(
  years.map(function(y){
    return ee.String('HI_').cat(ee.Number(y).format('%d'));
  })
);


// Merge with other stats
var allStats = meanT.addBands(maxT)
                    .addBands(meanHI)
                    .addBands(totalDangerDays)
                    .addBands(yearlyStack);



// Reduce to district level
var districtStats = allStats.reduceRegions({
  collection: districts,
  reducer: ee.Reducer.mean(),
  scale: 10000
});

// Keep only required fields
var output = districtStats.map(function(f){
  return ee.Feature(null, {
    'district': f.get('ADM2_NAME'),
    'mean_temp_C': f.get('mean_temp'),
    'max_temp_C' : f.get('max_temp'),
    'mean_HI_C'  : f.get('mean_HI'),
    'days_HI_gt40': f.get('count_HI_gt40'),
    'HI_2021': f.get('HI_2021'),
    'HI_2022': f.get('HI_2022'),
    'HI_2023': f.get('HI_2023'),
    'HI_2024': f.get('HI_2024'),
    'HI_2025': f.get('HI_2025')
  });
});

// ================== EXPORTS ==================

// CSV export with all stats
Export.table.toDrive({
  collection: output,
  description: 'Bangladesh_HeatStress_Districts_YearlyHI',
  fileFormat: 'CSV'
});

// Overall mean HI raster
Export.image.toDrive({
  image: meanHI,
  description: 'Bangladesh_MeanHI_2021_2025',
  fileNamePrefix: 'mean_HI_2021_2025',
  scale: 10000,
  region: districts.geometry(),
  fileFormat: 'GeoTIFF',
  maxPixels: 1e13
});
